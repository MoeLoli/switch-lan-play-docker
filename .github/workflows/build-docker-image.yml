name: Build Docker Image

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    
    outputs:
      latest_version: ${{ steps.get_latest_version.outputs.result }}
      local_version: ${{ steps.get_local_version.outputs.result }}
      download_code_url: ${{ steps.get_code_url.outputs.result }}
    steps:
      - name: Check switch-lan-play latest version
        uses: actions/github-script@v3
        id: get_latest_version
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          script: |
            const releases = (await github.repos.listReleases({
              owner: 'spacemeowx2',
              repo: 'switch-lan-play'
            })).data;
            if (releases.length > 0) {
              return releases[0].name.replace('v', '');
            }
            return '';          
            
      - name: Check switch-lan-play local version
        uses: actions/github-script@v3
        id: get_local_version
        if: steps.get_latest_version.outputs.result != ''
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          script: |
            let HAVE_TAG = false;
            const tags = (await github.git.listMatchingRefs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags'
            })).data;
            for (let tag of tags) {
              if ((tag.ref).indexOf('${{ steps.get_latest_version.outputs.result }}') != -1) {
                HAVE_TAG = true;
              }
            }
            if (HAVE_TAG) {
              return '${{ steps.get_latest_version.outputs.result }}' ;
            }
            return '';
      
      - name: Create tag
        uses: actions/github-script@v3
        if: steps.get_latest_version.outputs.result != '' && steps.get_local_version.outputs.result == ''
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.get_latest_version.outputs.result }}",
              sha: context.sha
            });
            
      - name: Get code url
        id: get_code_url
        uses: actions/github-script@v3
        if: steps.get_latest_version.outputs.result != '' && steps.get_local_version.outputs.result == ''
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          script: |
            const releases = (await github.repos.listReleases({
              owner: 'spacemeowx2',
              repo: 'switch-lan-play'
            })).data;
            if (releases.length > 0) {
              return releases[0].zipball_url;
            }
            return '';
    
  build-server:
    runs-on: ubuntu-latest
    
    needs: check
    
    steps:        
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
            
      - name: Get code
        if: needs.check.outputs.download_code_url != ''
        run: |
          mv ./server/Dockerfile ./Dockerfile
          wget ${{ needs.check.outputs.download_code_url }} -O release.zip
          unzip release.zip
          cp -r -n ./spacemeowx2-switch-lan-play*/server/* ./
          rm -rf release.zip ./spacemeowx2-switch-lan-play* ./server ./client
      
      - name: Build and push
        uses: docker/build-push-action@v2
        if: needs.check.outputs.download_code_url != ''
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64, linux/amd64
          tags: |
            ${{ secrets.DOCKER_NS }}/switch-lan-play-server:${{ needs.check.outputs.latest_version }}
            ${{ secrets.DOCKER_NS }}/switch-lan-play-server:latest
            
  build-client:
    runs-on: ubuntu-latest
    
    needs: check
    
    steps:        
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        if: needs.check.outputs.download_code_url != ''
        with:
          file: ./client/Dockerfile
          push: true
          platforms: linux/arm64, linux/amd64
          tags: |
            ${{ secrets.DOCKER_NS }}/switch-lan-play-client:${{ needs.check.outputs.latest_version }}
            ${{ secrets.DOCKER_NS }}/switch-lan-play-client:latest

          
